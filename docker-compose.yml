# version: '3.8'

services:

  postgres:
    container_name: postgres_container
    image: postgres:latest
    env_file: 
      - ./.env   # Load environment variables from .env file
    ports:
      - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data  # Use named volume for persistence
    # healthcheck:
    #   test: ["CMD", "pg_isready", "-U", "postgres"]
    #   interval: 10s
    #   retries: 5
    #   start_period: 30s
    #   timeout: 10s
    networks:
      - webnet

  django:
    container_name: django_container
    build: ./backend/Django_Docker_files/
    environment:
       - DJANGO_SETTINGS_MODULE=Django_backend_project.settings.settings
    # ports:
    #   - "8000:8000"
    expose:
      - 8000
    volumes:
      - ./backend:/app  # Mount backend folder into the container
      - static_files:/app/staticfiles  # Mount static files volume
    depends_on:
      - postgres  # Ensure Django waits for PostgreSQL to be ready
    env_file: 
      - ./.env    # Load environment variables from .env file
    networks:
      webnet:
        aliases:
          - django
    stdin_open: true # Keep stdin open, so we can attach to the container for debugging with dpd in the django
    tty: true 
  
  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:latest
  #   ports:
  #     - "8081:8080"
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   restart: always


  # prometheus:
  #   container_name: prometheus_container
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   depends_on:
  #     - cadvisor
  #   restart: always

  # grafana:
  #   container_name: grafana_container
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - ./.env
  #   volumes:
  #     - grafana-data:/var/lib/grafana

  redis:
    container_name: redis_container
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - webnet

  nginx:
    container_name: nginx_container
    build: 
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - static_files:/home/app/static  # Mount static files volume
    #   - ./nginx:/etc/nginx/conf.d  # Mount custom Nginx config
    depends_on:
      - django
    networks:
      - webnet

volumes:
  static_files:  # Define named volume for static files
  database:  # Define named volume for PostgreSQL persistence
  grafana-data:  # Define named volume for Grafana persistence
networks:
  webnet:
    driver: bridge
