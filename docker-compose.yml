version: '3.8'

services:

  postgres:
    container_name: postgres_container
    image: postgres:latest
    env_file: 
      - ./.env   # Load environment variables from .env file
    ports:
      - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data  # Use named volume for persistence
    # healthcheck:
    #   test: ["CMD", "pg_isready", "-U", "postgres"]
    #   interval: 10s
    #   retries: 5
    #   start_period: 30s
    #   timeout: 10s

  django:
    container_name: django_container
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app  # Mount backend folder into the container
    depends_on:
      - postgres  # Ensure Django waits for PostgreSQL to be ready
    env_file: 
      - ./.env    # Load environment variables from .env file
  
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor_container
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./provisioning/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    command: ["--config.file=/etc/alertmanager/alertmanager.yml"]

  prometheus:
    container_name: prometheus_container
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/service_alerts.yml:/etc/prometheus/service_alerts.yml
      - ./prometheus/first_rules.yml:/etc/prometheus/first_rules.yml 
    ports:
      - "9090:9090"
    depends_on:
      - cadvisor
      - alertmanager
    restart: always
  
  grafana:
    container_name: grafana_container
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
    #  - ./dashboards:/var/lib/grafana/dashboards

  redis:
    container_name: redis_container
    image: redis:6
    ports:
      - "6379:6379"

  nginx:
    container_name: nginx_container
    build: 
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    # volumes:
    #   - ./nginx:/etc/nginx/conf.d  # Mount custom Nginx config
    depends_on:
      - django

volumes:
  database:  # Define named volume for PostgreSQL persistence
  grafana-data:  # Define named volume for Grafana persistence
